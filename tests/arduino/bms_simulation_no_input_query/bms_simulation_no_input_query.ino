// in arduino nano global variables are stored in flash memory, in uno they are stored in RAM, for this reason this arrays get filled with zeros after the plate loses power
// the solution is to use EEPROM memory

#include <EEPROM.h>

// uint8_t msg0[36] = {0xdd, 0x03, 0x00, 0x1d, 0x12, 0x6a, 0x00, 0x00, 0x08, 0x97, 
//   0x13, 0x88, 0x00, 0x00, 0x2d, 0x53, 0x00, 0x00, 0x00 ,0x00, 0x00, 0x00, 0x22, 0x2c, 0x01,
//   0x0D, 0x03, 0x0b, 0xb4, 0x0b, 0xa8, 0x0b, 0xa0, 0xfb, 0x31, 0x77};
// uint8_t msg1[37] = {0xDD, 0x04, 0x00, 0x1E, 0x0F, 0x66, 0x0F, 0x63, 0x0F, 0x63, 
//   0x0F, 0x64, 0x0F, 0x3E, 0x0F, 0x63, 0x0F, 0x37, 0x0F, 0x5B, 0x0F, 0x65, 0x0F, 0x3B, 0x0F,
//   0x63, 0x0F, 0x63, 0x0F, 0x3C, 0x0F, 0x66, 0x0F, 0x3D, 0xF9, 0xF9, 0x77};
// uint8_t msg2[36] = {0xdd, 0x03, 0x00, 0x1d, 0x12, 0x3e, 0x00, 0x00, 0x08, 0x68, 
//   0x13, 0x88, 0x00, 0x00, 0x2d, 0x53, 0x00, 0x00, 0x00 ,0x00, 0x00, 0x00, 0x22, 0x2c, 0x01,
//   0x0D, 0x03, 0x0b, 0xb2, 0x0b, 0xab, 0x0b, 0xa0, 0xfb, 0x8b, 0x77};
// uint8_t msg3[37] = {0xDD, 0x04, 0x00, 0x1E, 0x0F, 0x66, 0x0F, 0x58, 0x0F, 0x3F, 
//   0x0F, 0x62, 0x0F, 0x5B, 0x0F, 0x63, 0x0F, 0x37, 0x0F, 0x5B, 0x0F, 0x65, 0x0F, 0x3B, 0x0F,
//   0x63, 0x0F, 0x63, 0x0F, 0x3C, 0x0F, 0x66, 0x0F, 0x3D, 0xfa, 0x0d, 0x77};
uint8_t msg_flag = 0;

void setup() {
  Serial.begin(9600);
  while (!Serial);
  uint8_t msg0[36] = {0xdd, 0x03, 0x00, 0x1d, 0x12, 0x6a, 0x00, 0x00, 0x08, 0x97, 
    0x13, 0x88, 0x00, 0x00, 0x2d, 0x53, 0x00, 0x00, 0x00 ,0x00, 0x00, 0x00, 0x22, 0x2c, 0x01,
    0x0D, 0x03, 0x0b, 0xb4, 0x0b, 0xa8, 0x0b, 0xa0, 0xfb, 0x31, 0x77};
  uint8_t msg1[37] = {0xDD, 0x04, 0x00, 0x1E, 0x0F, 0x66, 0x0F, 0x63, 0x0F, 0x63, 
    0x0F, 0x64, 0x0F, 0x3E, 0x0F, 0x63, 0x0F, 0x37, 0x0F, 0x5B, 0x0F, 0x65, 0x0F, 0x3B, 0x0F,
    0x63, 0x0F, 0x63, 0x0F, 0x3C, 0x0F, 0x66, 0x0F, 0x3D, 0xF9, 0xF9, 0x77};
  uint8_t msg2[36] = {0xdd, 0x03, 0x00, 0x1d, 0x12, 0x3e, 0x00, 0x00, 0x08, 0x68, 
    0x13, 0x88, 0x00, 0x00, 0x2d, 0x53, 0x00, 0x00, 0x00 ,0x00, 0x00, 0x00, 0x22, 0x2c, 0x01,
    0x0D, 0x03, 0x0b, 0xb2, 0x0b, 0xab, 0x0b, 0xa0, 0xfb, 0x8b, 0x77};
  uint8_t msg3[37] = {0xDD, 0x04, 0x00, 0x1E, 0x0F, 0x66, 0x0F, 0x58, 0x0F, 0x3F, 
    0x0F, 0x62, 0x0F, 0x5B, 0x0F, 0x63, 0x0F, 0x37, 0x0F, 0x5B, 0x0F, 0x65, 0x0F, 0x3B, 0x0F,
  0x63, 0x0F, 0x63, 0x0F, 0x3C, 0x0F, 0x66, 0x0F, 0x3D, 0xfa, 0x0d, 0x77};
  int pointer = 0;
  for (int i = 0; i < 36; ++i, ++pointer)
  {
    EEPROM.update(pointer, msg0[i]);
  }
  EEPROM.update(146, 0); // 36 + 37 + 36 + 37 = 146
  for (int i = 0; i < 37; ++i, ++pointer)
  {
    EEPROM.update(pointer, msg1[i]);
  }
  EEPROM.update(147, 36); // pointer += 36
  for (int i = 0; i < 36; ++i, ++pointer)
  {
    EEPROM.update(pointer, msg2[i]);
  }
  EEPROM.update(148, 73); // pointer += 37
  for (int i = 0; i < 37; ++i, ++pointer)
  {
    EEPROM.update(pointer, msg3[i]);
  }
  EEPROM.update(149, 109); // pointer += 36
  // 146-149 - pointers to arrays of messages
}

void loop() {
  unsigned long cnt = millis();
  int EEPROM_pointer = EEPROM.read(146 + msg_flag);
  while (millis() - cnt < 500);
  for (int i = 0; i < ((msg_flag % 2) ? 37 : 36); ++i)
  {
    Serial.write(EEPROM.read(EEPROM_pointer + i));
  }
  msg_flag == 3 ? msg_flag = 0 : ++msg_flag;
}
